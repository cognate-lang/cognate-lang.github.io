<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>About on Cognate: Readable and concise concatenative programming</title>
    <link>https://cognate-lang.github.io/</link>
    <description>Recent content in About on Cognate: Readable and concise concatenative programming</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="https://cognate-lang.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Learn Cognate</title>
      <link>https://cognate-lang.github.io/learn/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://cognate-lang.github.io/learn/</guid>
      <description>Learn Cognate A brief introduction to the language Setup First get hold of one of Cognate&amp;rsquo;s implementations; installation and invocation instructions are on the respective pages.&#xA;CognaC is the original compiler &amp;ndash; it performs type inference and produces efficient binaries. Cognate Playground (developed by hedyhli) runs Cognate programs in a web browser, requiring no installation. Cogni (developed by dragoncoder047) interprets Cognate programs, and is optimised to run on microcontrollers. If you&amp;rsquo;re using CognaC, you can compile a Cognate file named foo.</description>
    </item>
    <item>
      <title>Prelude</title>
      <link>https://cognate-lang.github.io/reference/prelude/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://cognate-lang.github.io/reference/prelude/</guid>
      <description>Prelude Drop Discard the top stack item.&#xA;Print Drop &#34;foo&#34; &#34;bar&#34;; Source Def Drop as ( Let X ); Swap Swaps the top two stack items.&#xA;Print Swap 1 2; Source Def Swap as ( Let X ; Let Y ; Y X ); Do Execute a block.&#xA;Do ( Print &#34;hello world!&#34; ); Source Def Do as ( Def F ; F ); Any? Takes a parameter of any type and returns True</description>
    </item>
  </channel>
</rss>
